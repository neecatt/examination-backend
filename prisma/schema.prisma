// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//One to many with unigroup
model Student {
  id      Int    @id @default(autoincrement())
  name    String
  surname String
  // Result     Result[]
}

//many to many with subjects
model Teacher {
  id        Int        @id @default(autoincrement())
  name      String
  surname   String
  email     String     @unique
  password  String
  is_active Boolean
  Subjects  Subject[]
  Unigroups UniGroup[]
}

//many to many with teacher
//many to one with unigroup
model Subject {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  credit      Int
  Questions   Question[]
  Teachers    Teacher[]
  Unigroups   UniGroup[]
  // Quiz        Quiz[]
}

//many to one with subject
//one to one with answer
model Question {
  id        Int      @id @default(autoincrement())
  question  String
  OptionA   String?
  OptionB   String?
  OptionC   String?
  OptionD   String?
  OptionE   String?
  subject   Subject  @relation(fields: [subjectId], references: [id])
  subjectId Int
  createdAt DateTime @default(now())
  answer    String?
}

//one to one with student
//one to many with subject
model UniGroup {
  id       Int       @id @default(autoincrement())
  name     String
  Subjects Subject[]
  // Quiz               Quiz[]
  Teachers Teacher[]
}

// model Quiz {
//   id        Int      @id @default(autoincrement())
//   subject   Subject  @relation(fields: [subjectId], references: [id])
//   subjectId Int
//   group     UniGroup @relation(fields: [groupId], references: [id])
//   groupId   Int
//   createdAt DateTime @default(now())
//   Result    Result[]
// }

// model Result {
//   id        Int      @id @default(autoincrement())
//   student   Student  @relation(fields: [studentId], references: [id])
//   studentId Int
//   quiz      Quiz     @relation(fields: [quizId], references: [id])
//   quizId    Int
//   score     Int
//   createdAt DateTime @default(now())
// }
